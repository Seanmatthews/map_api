package map_api.proto;

enum PeerRequestType {ADD_PEER = 1; REMOVE_PEER = 2;}

message AddRemovePeer {
  required string peer_id = 1;
  required PeerRequestType request_type = 2;
}

message JoinQuitRequest {
  required PeerRequestType type = 1;
}

message JoinQuitResponse {
  required bool response = 1;
  repeated string peer_id = 2;
  optional string leader_id = 3;
}

message RaftRevision {
  required uint64 index = 1;
  optional uint64 entry = 2;
  required uint64 term = 3;
  optional AddRemovePeer add_remove_peer = 4;
}

message AppendEntriesRequest {
  required uint64 term = 1;
  required uint64 last_log_index = 2;
  required uint64 last_log_term = 3;
  required uint64 commit_index = 4;
  optional uint64 previous_log_index = 5;
  optional uint64 previous_log_term = 6;
  optional RaftRevision revision = 7;
}

enum AppendResponseStatus {
  FAILED = 0;
  REJECTED = 1;
  ALREADY_PRESENT = 2;
  SUCCESS = 3;
}

message AppendEntriesResponse {
  required uint64 term = 1;
  required uint64 last_log_index = 2;
  required uint64 last_log_term = 3;
  required uint64 commit_index = 4;
  required AppendResponseStatus response = 5;
}

message RequestVote {
  required uint64 term = 1;
  required uint64 last_log_index = 2;
  required uint64 last_log_term = 3;
  required uint64 commit_index = 4;
}

message ResponseVote {
  required bool vote = 1;
  optional uint64 previous_log_index = 2;
  optional uint64 previous_log_term = 3;
}