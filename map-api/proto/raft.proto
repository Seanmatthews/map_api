package map_api.proto;
import "chunk.proto";

enum PeerRequestType {ADD_PEER = 0; REMOVE_PEER = 1;}

message AddRemovePeer {
  optional ChunkRequestMetadata metadata = 1;
  optional string peer_id = 2;
  optional PeerRequestType request_type = 3;
}

message JoinQuitRequest {
  optional ChunkRequestMetadata metadata = 1;
  optional PeerRequestType type = 2;
}

message ConnectResponse {
  optional uint64 index = 1;
  optional string leader_id = 2;
}

message JoinQuitResponse {
  optional bool response = 1;
  optional string leader_id = 2;
  optional uint64 index = 3;
}

message NewPeerInit {
  optional ChunkRequestMetadata metadata = 1;
  repeated string peer_id = 2;
  // TODO(aqurai): existing revision proto instead of RaftRevision.
  repeated RaftRevision revisions = 3;
}

message RaftRevision {
  optional uint64 index = 1;
  optional uint64 entry = 2;
  optional uint64 term = 3;
  optional AddRemovePeer add_remove_peer = 4;
}

message AppendEntriesRequest {
  optional ChunkRequestMetadata metadata = 1;
  optional uint64 term = 2;
  optional uint64 last_log_index = 3;
  optional uint64 last_log_term = 4;
  optional uint64 commit_index = 5;
  optional uint64 previous_log_index = 6;
  optional uint64 previous_log_term = 7;
  optional RaftRevision revision = 8;
}

enum AppendResponseStatus {
  FAILED = 0;
  REJECTED = 1;
  ALREADY_PRESENT = 2;
  SUCCESS = 3;
}

message AppendEntriesResponse {
  optional uint64 term = 1;
  optional uint64 last_log_index = 2;
  optional uint64 last_log_term = 3;
  optional uint64 commit_index = 4;
  optional AppendResponseStatus response = 5;
}

message InsertRequest {
  optional ChunkRequestMetadata metadata = 1;
  optional uint64 entry = 2;
}

message InsertResponse {
  optional uint64 index = 1;
}

message VoteRequest {
  optional ChunkRequestMetadata metadata = 1;
  optional uint64 term = 2;
  optional uint64 last_log_index = 3;
  optional uint64 last_log_term = 4;
  optional uint64 commit_index = 5;
}

enum VoteResponseType {GRANTED = 0; DECLINED = 1; VOTER_NOT_ELIGIBLE = 2;}

message VoteResponse {
  optional VoteResponseType vote = 1;
  optional uint64 previous_log_index = 2;
  optional uint64 previous_log_term = 3;
}

message QueryStateResponse {
  optional string leader_id_ = 1;
  optional uint64 last_log_index = 3;
  optional uint64 last_log_term = 4;
  optional uint64 commit_index = 5;
  optional uint64 commit_result = 6;
}

message NotifyJoinQuitSuccess {
  optional ChunkRequestMetadata metadata = 1;
}

message QueryState {
  optional ChunkRequestMetadata metadata = 1;
}