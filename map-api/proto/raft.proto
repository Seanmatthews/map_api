package map_api.proto;

enum PeerRequestType {ADD_PEER = 1; REMOVE_PEER = 2;}

message AddRemovePeer {
  optional string peer_id = 1;
  optional PeerRequestType request_type = 2;
}

message JoinQuitRequest {
  optional PeerRequestType type = 1;
}

message JoinQuitResponse {
  optional bool response = 1;
  repeated string peer_id = 2;
  optional string leader_id = 3;
  optional uint64 index = 4;
}

message RaftRevision {
  optional uint64 index = 1;
  optional uint64 entry = 2;
  optional uint64 term = 3;
  optional AddRemovePeer add_remove_peer = 4;
}

message AppendEntriesRequest {
  optional uint64 term = 1;
  optional uint64 last_log_index = 2;
  optional uint64 last_log_term = 3;
  optional uint64 commit_index = 4;
  optional uint64 previous_log_index = 5;
  optional uint64 previous_log_term = 6;
  optional RaftRevision revision = 7;
}

enum AppendResponseStatus {
  FAILED = 0;
  REJECTED = 1;
  ALREADY_PRESENT = 2;
  SUCCESS = 3;
}

message AppendEntriesResponse {
  optional uint64 term = 1;
  optional uint64 last_log_index = 2;
  optional uint64 last_log_term = 3;
  optional uint64 commit_index = 4;
  optional AppendResponseStatus response = 5;
}

message VoteRequest {
  optional uint64 term = 1;
  optional uint64 last_log_index = 2;
  optional uint64 last_log_term = 3;
  optional uint64 commit_index = 4;
}

enum VoteResponseType {GRANTED = 1; DECLINED = 2; VOTER_NOT_ELIGIBLE = 3;}

message VoteResponse {
  optional VoteResponseType vote = 1;
  optional uint64 previous_log_index = 2;
  optional uint64 previous_log_term = 3;
}

message QueryStateResponse {
  optional string leader_id_ = 1;
  optional uint64 last_log_index = 2;
  optional uint64 last_log_term = 3;
  optional uint64 commit_index = 4;
  optional uint64 commit_result = 5;
}